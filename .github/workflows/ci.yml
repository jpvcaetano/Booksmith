name: CI

# Trigger on pushes to main and PRs to main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    # Get the source code
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Python environment
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Install Poetry dependency manager
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    # Try to restore cached dependencies for speed
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    # Install dependencies only if cache missed (heavy operation)
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    # Install project code (lightweight, always needed)
    - name: Install project
      run: poetry install --no-interaction

    # Check code formatting
    - name: Check code formatting with black
      run: poetry run black --check booksmith/ tests/

    # Check import sorting
    - name: Check import sorting with isort
      run: poetry run isort --check-only booksmith/ tests/

    # Run the test suite
    - name: Run tests with pytest
      run: poetry run pytest tests/ -v

